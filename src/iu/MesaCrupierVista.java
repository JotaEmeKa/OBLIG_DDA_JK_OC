package iu;

import componente.PanelRuleta;
import iu.controladores.LobbyVistaControlador;
import iu.controladores.MesaCrupierVistaControlador;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import logica.mesa.Apuesta;
import logica.mesa.Casillero;
import logica.mesa.Mesa;
import logica.mesa.Ronda;
import logica.mesa.TipoEfecto;
import logica.usuario.Sesion;
import logica.usuario.Usuario;
import logica.usuario.UsuarioCrupier;
import logica.usuario.UsuarioJugador;

/**
 *
 * @author digregor
 */
public class MesaCrupierVista extends javax.swing.JFrame implements VistaJugarMesa {

    private final MesaCrupierVistaControlador controlador;

    int apuestaRojo = 0;
    Sesion sesion;
    Mesa mesa;
    Ronda rondaActual;
    UsuarioCrupier usuarioCrupier;
//    ArrayList<int> numerosSorteados;

    public MesaCrupierVista(Sesion sesion, Mesa mesa) {
        initComponents();
        this.sesion = sesion;
        this.usuarioCrupier = (UsuarioCrupier) sesion.getUsuario();
        this.mesa = mesa;//usuarioCrupier.getMesa();//Hay que agregar el crupier a la mesa
        this.controlador = crearControlador();
    }

    protected MesaCrupierVistaControlador crearControlador() {
        return new MesaCrupierVistaControlador(this, this.mesa);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        r = new componente.PanelRuleta();
        lblBalanceMesa = new javax.swing.JLabel();
        lblApuestasMonto = new javax.swing.JLabel();
        lblRondaNro = new javax.swing.JLabel();
        lblIdRuleta = new javax.swing.JLabel();
        btnCerrarMesa = new javax.swing.JButton();
        lblImgMoney = new javax.swing.JLabel();
        lblNosSorteados = new javax.swing.JLabel();
        cbEfectoSelect = new javax.swing.JComboBox<>();
        btnLanzarPagar = new javax.swing.JButton();
        lblNroSorteado = new javax.swing.JLabel();
        lblImgRuleta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEstadisticas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBalanceMesa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblApuestasMonto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblRondaNro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblIdRuleta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnCerrarMesa.setText("Cerrar mesa");
        btnCerrarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarMesaActionPerformed(evt);
            }
        });

        lblImgMoney.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componente/money.png"))); // NOI18N

        lblNosSorteados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cbEfectoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEfectoSelectActionPerformed(evt);
            }
        });

        btnLanzarPagar.setText("LANZAR/PAGAR");
        btnLanzarPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLanzarPagarActionPerformed(evt);
            }
        });

        lblNroSorteado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        lblImgRuleta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componente/roulette.png"))); // NOI18N

        tblEstadisticas.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        tblEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ronda", "Balance Anterior", "Apuesta", "Recolección", "Liquidación", "Balance posterior"
            }
        ));
        jScrollPane1.setViewportView(tblEstadisticas);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Jugador", "Saldo"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblImgMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBalanceMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143)
                .addComponent(lblRondaNro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImgRuleta, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIdRuleta, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnCerrarMesa)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblApuestasMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(cbEfectoSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(btnLanzarPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(lblNroSorteado, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblNosSorteados, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(r, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblImgRuleta, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIdRuleta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblBalanceMesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblImgMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRondaNro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnCerrarMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbEfectoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLanzarPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblApuestasMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNroSorteado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNosSorteados, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbEfectoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEfectoSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEfectoSelectActionPerformed

    private void btnLanzarPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLanzarPagarActionPerformed
        lanzarPagar();
    }//GEN-LAST:event_btnLanzarPagarActionPerformed

    private void btnCerrarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarMesaActionPerformed
        cerrarMesa();
    }//GEN-LAST:event_btnCerrarMesaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarMesa;
    private javax.swing.JButton btnLanzarPagar;
    private javax.swing.JComboBox<TipoEfecto> cbEfectoSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApuestasMonto;
    private javax.swing.JLabel lblBalanceMesa;
    private javax.swing.JLabel lblIdRuleta;
    private javax.swing.JLabel lblImgMoney;
    private javax.swing.JLabel lblImgRuleta;
    private javax.swing.JLabel lblNosSorteados;
    private javax.swing.JLabel lblNroSorteado;
    private javax.swing.JLabel lblRondaNro;
    private componente.PanelRuleta r;
    private javax.swing.JTable tblEstadisticas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarError(String mensaje) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarTitulo(String titulo) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void jugar(Sesion usuario, List<UsuarioJugador> jugadores) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarNombre(String nombre) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarMensaje(String mensaje) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void lanzarBola() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    public void cerrarMesa() {
        // Mostrar un cuadro de diálogo de confirmación
        int respuesta = JOptionPane.showConfirmDialog(
                null, // Componente padre (en este caso, ninguno)
                "¿Desea cerrar la mesa?", // Mensaje a mostrar
                "Confirmación", // Título del cuadro de diálogo
                JOptionPane.YES_NO_OPTION // Tipo de opciones (Sí/No)
        );

        // Comprobar la respuesta del usuario
        if (respuesta == JOptionPane.YES_OPTION) {
            System.out.println("Mesa cerrada.");
            //código que se ejecutará si el usuario elige "Sí" para cerrar la mesa
        } else {
            System.out.println("Operación cancelada.");
            // código que se ejecutará si el usuario elige "No" o cierra el cuadro de diálogo
        }
    }

    @Override
    public void cerrar() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarMontos(List<UsuarioJugador> jugadores) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarNumeroSorteado(Casillero casillero) {
        lblNroSorteado.setText(casillero.toString());
        if (casillero.getUniversalCellCode() == 0) {
            lblNroSorteado.setBackground(Color.GREEN);
        } else if (casillero.esRojo) {
            lblNroSorteado.setBackground(Color.RED);
        } else {
            lblNroSorteado.setBackground(Color.BLACK);
        }
    }

    @Override
    public void mostrarMensajeDeError(String mensaje) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarDatosIniciales(ArrayList<TipoEfecto> tipos) {
        ocultarBotones();//hay que ocultar según el tipo de apuesta
        lblBalanceMesa.setText(String.valueOf(mesa.getBalance()));
        lblIdRuleta.setText("Ruleta # " + String.valueOf(mesa.getMesaId()));
        lblRondaNro.setText("Ronda # " + String.valueOf(mesa.getRondas().size()));
        cargarApuestasMonto();
        lblNosSorteados.setText(ultimosNumerosSorteados());
        cargarTipoEfecto(tipos);
        //lblNosSorteados.setText("Últimos lanzamientos: " + String.valueOf(mesa.getRondas().lastIndexOf(r)));
        completarTablas();
    }

    private void completarTablas() {

    }

    private void ocultarBotones() {
        r.setVisible(PanelRuleta.PRIMERA_COLUMNA, false);
        r.setVisible(PanelRuleta.SEGUNDA_COLUMNA, false);
        r.setVisible(PanelRuleta.TERCERA_COLUMNA, false);
        r.setVisible(PanelRuleta.MENOR, false);
        r.setVisible(PanelRuleta.MAYOR, false);
        r.setVisible(PanelRuleta.PAR, false);
        r.setVisible(PanelRuleta.IMPAR, false);
        r.setVisible(PanelRuleta.PRIMO, false);
        r.setVisible(PanelRuleta.COMPUESTO, false);
    }

    private String ultimosNumerosSorteados() {
        ArrayList<Ronda> rondas = this.mesa.getRondas();
        String txt = "Últimos lanzamientos: ";
        for (Ronda ronda : rondas) {
            txt = txt + String.valueOf(ronda.getCasillero()) + ", ";
        }
        return txt;
    }

    private void cargarTipoEfecto(ArrayList<TipoEfecto> tipos) {
        for (TipoEfecto t : tipos) {
            cbEfectoSelect.addItem(t);
        }
    }

    private void lanzarPagar() { //Según el State de la mesa, voy a hacer diferentes cosas y según el efecto
        TipoEfecto te = (TipoEfecto) cbEfectoSelect.getSelectedItem();
        controlador.lanzarBola(te, this.mesa);
    }
//Pasar al controlador

    private void cargarApuestasMonto() {
        if (this.rondaActual == null) {
            lblApuestasMonto.setText("Apuestas: 0 | Monto: $ 0");
        } else {
            List<Apuesta> apuestas = rondaActual.getApuestas();
            String txt = "Apuestas: ";
            double sumMontos = 0;
            int cantApuestas = apuestas.size();

            for (int i = 0; i < cantApuestas; i++) {
                sumMontos += apuestas.get(i).getMonto();
            }

            txt = txt + cantApuestas + " | Monto: $ " + sumMontos;

            lblApuestasMonto.setText(txt);
        }
    }

}
